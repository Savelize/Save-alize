<?php

namespace Site\SavalizeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductBrandRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */

class ProductBrandRepository extends EntityRepository
{

	public function displayCompanyProducts($company_id){
		$query = $this->getEntityManager()->createQuery('
			SELECT pb
			FROM SiteSavalizeBundle:ProductBrand pb
            JOIN SiteSavalizeBundle:Brand b
            WHERE b.id = pb.brand
            AND b.company = :company_id
            ')->setParameter('company_id', $company_id);
        return $query->getResult();
    }

	public function getFirstPBfromCategory($catId){
		 $query= $this->getEntityManager()->createQuery('
			select pb
			from SiteSavalizeBundle:ProductBrand pb join pb.product p join p.category c where c.id = :catId
			')->setParameter('catId', $catId)->setMaxResults(3);
		return $query->getResult();
	}

    public function getBrandsOfCategory($catId) {
		$query= $this->getEntityManager()->createQuery('
			select b from SiteSavalizeBundle:Brand b join 
			b.productBrands pb join pb.product p join p.category c where c.id = :catId 
		')->setParameter('catId', $catId);
		return $query->getResult();
	}
	
    public function getBrandPictures($brandSearched)
    {
    	$query = $this->getEntityManager()->createQuery('
    		select pb from SiteSavalizeBundle:ProductBrand pb join pb.brand b where b.name = :brandSearched
    	')->setParameter('brandSearched', $brandSearched);
    	return $query->getResult();
    }
    public function productsandbrands($categoryID) {

        $q = $this->getEntityManager()->createQuery('
            SELECT pb
            FROM SiteSavalizeBundle:ProductBrand pb           
             WHERE pb.category = :categoryID       
            ')->setParameter('categoryID', $categoryID);
        $result = $q->getResult();

        return $result;
    }
    
     public function productbrandID($categoryID) {

        $q = $this->getEntityManager()->createQuery('
            SELECT pb.id
            FROM SiteSavalizeBundle:ProductBrand pb           
             WHERE pb.category = :categoryID       
            ')->setParameter('categoryID', $categoryID);
        $result = $q->getResult();

        return $result;
    }

}
