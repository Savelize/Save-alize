<?php

namespace Site\SavalizeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * HistoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
<<<<<<< HEAD
class HistoryRepository extends EntityRepository {

    public function getMonthlyPurchases($date) {
        $ndate = new \DateTime($date);
        $ndate = $ndate->format("Y-m-d");
        $date = explode("-", $ndate);
        $year = $date[0];
        $month = $date[1];
        $day = $date[2];

        $q = $this->createQueryBuilder('p');
        $q->select('p')
                ->where('p.date LIKE :date')
                ->setParameter('date', '%-' . $month . '-%');
        $result = $q->getQuery()->getResult();
        
        return $result;
    }
    
    public function getMonth($date){
        $ndate = new \DateTime($date);
        $ndate = $ndate->format("Y-m-d");
        $date = explode("-", $ndate);
        $year = $date[0];
        $month = $date[1];
        $day = $date[2];
        
        return $month;
    }

    public function dateRangeData($startDate, $endDate) {
        $startDated = new \DateTime($startDate);

        $startDates = $startDated->format("Y-m-d");
        //echo $startDates;
        $endDate = new \DateTime($endDate);
        $endDate = $endDate->format("Y-m-d");
        // g stands for graph
        $q = $this->createQueryBuilder('g');
//        $q->select('sum('p') as price')
//                ->where('g.date >= :startDate')
//                ->andWhere('g.date <= :endDate')
//                ->groupBy('p')
//                ->setParameter('startDate', $startDates )
//                ->setParameter('endDate', $endDate);
       
        $result = $q->getQuery()->getResult();


//        $users2 = Doctrine_Query::create()
//                ->select('g.price, p.name')
//                ->from('History g')
//                ->orderby('u.id');
//        $tmp2 = $users2->fetchArray();

        return $result;
    }

=======
class HistoryRepository extends EntityRepository
{
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
}
