<?php

namespace Site\SavalizeBundle\Entity;

use Doctrine\ORM\Mapping as ORM;

/**
 * Product
 * @ORM\Table(name="product")
 * @ORM\Entity(repositoryClass="Site\SavalizeBundle\Entity\ProductRepository")
 */
class Product
{
    /**
     * @var integer
     *
     * @ORM\Column(name="id", type="integer")
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="name", type="string", length=30)
     */
    private $name;

    /**
     * @var integer
     *
     * @ORM\Column(name="confirmed", type="integer")
     */
    private $confirmed;

    /**
     * @var boolean
     *
     * @ORM\Column(name="isDeleted", type="boolean")
     */
    private $isDeleted;

    /**
     *@ORM\ManyToOne(targetEntity="\Site\SavalizeBundle\Entity\Category", inversedBy="products")
     *@ORM\JoinColumn(name="category_id", referencedColumnName="id", onDelete = "CASCADE")
     */
    private $category;
    
    /**
    *@ORM\OneToMany(targetEntity="\Site\SavalizeBundle\Entity\ProductBrand", mappedBy="product")
    **/
    private $productBrands;


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
<<<<<<< HEAD
     * @ORM\ManyToOne(targetEntity="Category", inversedBy="category")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="category_id", referencedColumnName="id")
     * })
=======
     * @param string $name
     * @return Product
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
     */
    public function setName($name)
    {
        $this->name = $name;
    
        return $this;
    }

     /**
     @var \History
     *
     * @ORM\OneToMany(targetEntity="History" , mappedBy="history")
     */
    private $history;
    
    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set confirmed
     *
     * @param integer $confirmed
     * @return Product
     */
    public function setConfirmed($confirmed)
    {
        $this->confirmed = $confirmed;
    
<<<<<<< HEAD

    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set name
     *
     * @param string $name
     * @return Product
     */
    public function setName($name)
    {
        $this->name = $name;
    
        return $this;
    }

    /**
     * Get name
     *
     * @return string 
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set confirmed
     *
     * @param string $confirmed
     * @return Product
     */
    public function setConfirmed($confirmed)
    {
        $this->confirmed = $confirmed;
    
=======
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
        return $this;
    }

    /**
     * Get confirmed
     *
<<<<<<< HEAD
     * @return string 
=======
     * @return integer 
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
     */
    public function getConfirmed()
    {
        return $this->confirmed;
    }

    /**
     * Set isDeleted
     *
<<<<<<< HEAD
     * @param string $isDeleted
=======
     * @param boolean $isDeleted
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
     * @return Product
     */
    public function setIsDeleted($isDeleted)
    {
        $this->isDeleted = $isDeleted;
    
        return $this;
    }

    /**
     * Get isDeleted
     *
<<<<<<< HEAD
     * @return string 
=======
     * @return boolean 
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
     */
    public function getIsDeleted()
    {
        return $this->isDeleted;
    }

    /**
<<<<<<< HEAD
     * Add brand
     *
     * @param \Site\SavalizeBundle\Entity\Brand $brand
     * @return Product
     */
    public function addBrand(\Site\SavalizeBundle\Entity\Brand $brand)
    {
        $this->brand[] = $brand;
    
        return $this;
    }

    /**
     * Remove brand
     *
     * @param \Site\SavalizeBundle\Entity\Brand $brand
     */
    public function removeBrand(\Site\SavalizeBundle\Entity\Brand $brand)
    {
        $this->brand->removeElement($brand);
    }

    /**
     * Get brand
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getBrand()
    {
        return $this->brand;
    }

    /**
=======
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
     * Set category
     *
     * @param \Site\SavalizeBundle\Entity\Category $category
     * @return Product
     */
    public function setCategory(\Site\SavalizeBundle\Entity\Category $category = null)
    {
        $this->category = $category;
    
        return $this;
    }

    /**
     * Get category
     *
     * @return \Site\SavalizeBundle\Entity\Category 
     */
    public function getCategory()
    {
        return $this->category;
    }
<<<<<<< HEAD

    /**
     * Add history
     *
     * @param \Site\SavalizeBundle\Entity\History $history
     * @return Product
     */
    public function addHistory(\Site\SavalizeBundle\Entity\History $history)
    {
        $this->history[] = $history;
    
        return $this;
    }

    /**
     * Remove history
     *
     * @param \Site\SavalizeBundle\Entity\History $history
     */
    public function removeHistory(\Site\SavalizeBundle\Entity\History $history)
    {
        $this->history->removeElement($history);
    }

    /**
     * Get history
     *
     * @return \Doctrine\Common\Collections\Collection 
     */
    public function getHistory()
    {
        return $this->history;
    }
}
=======
}
>>>>>>> d1a447030e03cf700551546fedb9f196aae9e4d6
