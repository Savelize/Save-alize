<?php

namespace Site\SavalizeBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * ProductBrandRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ProductBrandRepository extends EntityRepository
{

	public function displayCompanyProducts($company_id){
		$query = $this->getEntityManager()->createQuery('
			SELECT pb
			FROM SiteSavalizeBundle:ProductBrand pb
            JOIN SiteSavalizeBundle:Brand b
            WHERE b.id = pb.brand
            AND b.company = :company_id
            ')->setParameter('company_id', $company_id);
        return $query->getResult();
    }

	public function getFirstPBfromCategory($catId){
		 $query= $this->getEntityManager()->createQuery('
			select pb
			from SiteSavalizeBundle:ProductBrand pb
			where pb.category = :catId
			')->setParameter('catId', $catId)->setMaxResults(3);
		try
		{return $query->getResult();}
		catch(\Doctrine\ORM\NoResultException $e)
        	{return null;}
	}
	public function getProductBrandsOfCategory($catId)
	{
		/*$query= $this->getEntityManager()->createQuery('
			select pb
			from SiteSavalizeBundle:ProductBrand pb
			where pb.category = :catId
			')->setParameter('catId', $catId);
		return $query->getResult();*/
		$query= $this->getEntityManager()->createQuery('
			select b from SiteSavalizeBundle:Brand b join 
			b.productBrands pb join bp.product p join p.category c where c.id = :catId 
		')->setParameter('catId', $catId);
		return $query->getResult();
	}
	public function getProductBrandsOfBrand($catId)
	{
			

	}
}
